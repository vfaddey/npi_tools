version: "3.8"


services:
  producer:
    container_name: producer
    build:
      context: ./producer
      dockerfile: Dockerfile
    networks:
      - npi-network
    env_file:
      - ./producer/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started


  consumer:
    container_name: consumer
    build:
      context: ./consumer
      dockerfile: Dockerfile
    networks:
      - npi-network
    env_file:
      - ./consumer/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started


  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    hostname: rabbitmq
    networks:
      - npi-network
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbit_entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
    entrypoint: [ "/usr/local/bin/rabbit_entrypoint.sh" ]
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s


  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    container_name: minio
    networks:
      - npi-network
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio-data:/data


volumes:
  rabbitmq_data:
    driver: local

networks:
  npi-network:
    external: True

